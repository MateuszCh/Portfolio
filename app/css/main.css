/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}pre,code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}h1{font-size:2em;margin:.75em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}figure{margin:1.5em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;white-space:normal;color:inherit;padding:0}optgroup{font-weight:bold}textarea{overflow:auto}@-webkit-keyframes swing{from{-webkit-transform:translate(0) rotate(0deg);transform:translate(0) rotate(0deg)}33%{-webkit-transform:translate(-60px, -20px) rotate(-20deg);transform:translate(-60px, -20px) rotate(-20deg)}66%{-webkit-transform:translate(60px, -20px) rotate(20deg);transform:translate(60px, -20px) rotate(20deg)}to{-webkit-transform:translate(0) rotate(0deg);transform:translate(0) rotate(0deg)}}@keyframes swing{from{-webkit-transform:translate(0) rotate(0deg);transform:translate(0) rotate(0deg)}33%{-webkit-transform:translate(-60px, -20px) rotate(-20deg);transform:translate(-60px, -20px) rotate(-20deg)}66%{-webkit-transform:translate(60px, -20px) rotate(20deg);transform:translate(60px, -20px) rotate(20deg)}to{-webkit-transform:translate(0) rotate(0deg);transform:translate(0) rotate(0deg)}}html{overflow-x:hidden}*{margin:0;padding:0;box-sizing:border-box}body{background-color:#880606;font-family:"Oswald",sans-serif;color:white;-webkit-transition:all 1.5s ease;transition:all 1.5s ease}body.light{background-color:#7A7D5A}body.dark{background-color:#212121}a{color:inherit;text-decoration:none}h2{text-align:center;font-size:2rem;padding:2rem}@media only screen and (min-width: 768px){h2{font-size:3rem}}@media only screen and (min-width: 1200px){h2{font-size:4rem}}ul{list-style-type:none}ul li{text-align:center;font-weight:300}@media only screen and (min-width: 768px){ul li{font-size:1.2rem}}@media only screen and (min-width: 1200px){ul li{font-size:1.5rem}}.tabs{width:100%;margin:0 auto;min-height:100vh;padding:0 1rem}@media only screen and (min-width: 768px){.tabs{width:70%}}@media only screen and (min-width: 1200px){.tabs{width:60%}}.slides{-webkit-transition:all 1s ease;transition:all 1s ease}.slides.moveLeft{-webkit-transform:translateX(-100vw);transform:translateX(-100vw)}.slides.moveRight{-webkit-transform:translateX(100vw);transform:translateX(100vw)}p{font-size:1rem;word-spacing:.1rem;margin:0.625rem 0;font-weight:300}@media only screen and (min-width: 768px){p{line-height:2rem;font-size:1.2rem}}@media only screen and (min-width: 1200px){p{font-size:1.5rem}}.next,.previous{display:none;cursor:pointer;position:absolute;top:50%;font-size:2rem;padding-bottom:3px}@media only screen and (min-width: 1200px){.next,.previous{display:inline-block}}.next:after,.previous:after{content:'';display:block;margin:auto;height:2px;width:0;background:transparent;-webkit-transition:width .5s ease, background-color .5s ease;transition:width .5s ease, background-color .5s ease}.next:hover:after,.previous:hover:after{width:100%;background:white}.next{right:-30%}.previous{left:-30%}.mainSection{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;padding-top:20vh;padding-bottom:5vh;position:relative}.mainSection h1{text-align:center;margin:0;font-size:3.5rem}@media only screen and (min-width: 768px){.mainSection h1{font-size:6rem;margin:0 auto}}.mainSection h2{font-family:"Caveat",cursive;-webkit-box-flex:1;flex-grow:1;padding:0;font-size:2rem}@media only screen and (min-width: 1200px){.mainSection h2{font-size:3rem}}@media only screen and (min-width: 768px){.mainSection ul{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}}@media only screen and (min-width: 1200px){.mainSection ul{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}}.mainSection ul li{padding:.15rem;text-align:center}.mainSection ul li:nth-of-type(3){text-decoration:underline}@media only screen and (min-width: 768px){.mainSection ul li{font-size:1.25rem;text-align:left;padding:0 .25rem}}@media only screen and (min-width: 1200px){.mainSection ul li{text-align:center;width:33%}}@media only screen and (min-width: 1200px){.mainSection ul li a{text-decoration:none;display:inline-block;position:relative;padding-bottom:3px}.mainSection ul li a:after{content:'';display:block;margin:auto;height:2px;width:0;background:transparent;-webkit-transition:width .5s ease, background-color .5s ease;transition:width .5s ease, background-color .5s ease}.mainSection ul li a:hover:after{width:100%;background:white}}.portfolio{position:relative}@media only screen and (min-width: 768px){.portfolio{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center}}.portfolio ul{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;padding-bottom:1rem;width:90%;margin:0 auto}@media only screen and (min-width: 768px){.portfolio ul{width:auto;flex-wrap:wrap;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:center;justify-content:center}}@media only screen and (min-width: 1200px){.portfolio ul{width:80%}}.portfolio ul li{margin:.5rem 0;display:inline-block}@media only screen and (min-width: 768px){.portfolio ul li{width:45%;margin:.5rem}}@media only screen and (min-width: 1200px){.portfolio ul li{width:40%}}.portfolio ul li:nth-child(1){margin-top:0}@media only screen and (min-width: 768px){.portfolio ul li:nth-child(1){margin:.5rem}}.portfolio ul li:nth-child(1) a{background-color:#ff6c84}.portfolio ul li:nth-child(2) a{background-color:#0c877a}.portfolio ul li:nth-child(3) a{background-color:#B7004E}.portfolio ul li:nth-child(4){margin-bottom:0}@media only screen and (min-width: 768px){.portfolio ul li:nth-child(4){margin:.5rem}}.portfolio ul li:nth-child(4) a{background-color:#28293E}.portfolio ul li a{padding:.5rem;display:block}@media only screen and (min-width: 1200px){.portfolio ul li a{-webkit-transition:all .5s ease;transition:all .5s ease;position:relative}.portfolio ul li a:after{position:absolute;content:'';background-color:#880606;opacity:.5;left:0;top:0;width:100%;height:100%;-webkit-transition:all .5s ease;transition:all .5s ease}.portfolio ul li a:hover figcaption{bottom:0}.portfolio ul li a:hover:after{opacity:0}}.portfolio ul li a figure{width:100%;margin:0 auto;position:relative;overflow:hidden}@media only screen and (min-width: 1200px){.portfolio ul li a figure{max-width:25rem}}.portfolio ul li a figure img{display:block;width:100%}.portfolio ul li a figure figcaption{position:absolute;width:100%;bottom:0;font-size:1rem;padding:.5rem;font-weight:400;background-color:white;color:#880606}@media only screen and (min-width: 1200px){.portfolio ul li a figure figcaption{min-height:6rem;font-size:1.4rem;font-weight:300;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;bottom:-6rem}}.about{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;position:relative}.about .skillsList{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.about .skillsList h3{margin:1rem 0;text-align:center}@media only screen and (min-width: 768px){.about .skillsList h3{font-size:2rem}}.about .skillsList ul{padding-bottom:1rem;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;flex-wrap:wrap}.about .skillsList ul li{padding:.25rem}@media only screen and (min-width: 1200px){.about .skillsList ul li{margin-left:1rem}}.infoForMobile{position:fixed;height:100vh;top:0;width:100vw;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;opacity:0}.infoForMobile div{padding:9.375rem;display:block;background-image:-webkit-radial-gradient(circle, #111 0%, transparent 70%);background-image:radial-gradient(circle, #111 0%, transparent 70%)}.infoForMobile div img{height:80px;display:block}.infoForMobile div img.startAnimation{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-name:swing;animation-name:swing}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2Uvbm9ybWFsaXplL19ub3JtYWxpemUuc2NzcyIsImJhc2Uvbm9ybWFsaXplL192ZXJ0aWNhbC1yaHl0aG0uc2NzcyIsImJhc2Uvbm9ybWFsaXplL192YXJpYWJsZXMuc2NzcyIsImhlbHBlcnMvX2FuaW1hdGlvbi5zY3NzIiwiYmFzZS9fZ2VuZXJhbC5zY3NzIiwiaGVscGVycy9fbWl4aW5zLnNjc3MiLCJjb21wb25lbnRzL19tYWluU2VjdGlvbi5zY3NzIiwiY29tcG9uZW50cy9fcG9yZm9saW8uc2NzcyIsImhlbHBlcnMvX3ZhcmlhYmxlcy5zY3NzIiwiY29tcG9uZW50cy9fYWJvdXQuc2NzcyIsImNvbXBvbmVudHMvX2luZm9Gb3JNb2JpbGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpRUFBaUUsS0FpQy9ELHVCQUNBLDBCQUNBLDZCQUE4QixDQUMvQixLQU9DLFFBQVMsQ0FDVixvRkF1QkMsYUFBYyxDQUNmLDRCQVVDLG9CQUFxQixDQUN0QixzQkFPQyxhQUNBLFFBQVMsQ0FDVixTQU9DLHVCQUF3QixDQUN6QixrQkFTQyxZQUFhLENBQ2QsRUFXQyw2QkFDQSxvQ0FBcUMsQ0FDdEMsaUJBU0MsZUFBZ0IsQ0FDakIsWUFXQyxtQkFDQSwwQkFDQSxnQ0FBaUMsQ0FDbEMsU0FRQyxtQkFBb0IsQ0FDckIsU0FRQyxrQkFBbUIsQ0FDcEIsa0JBV0MsaUNBQ0EsYUFBYyxDQUNmLElBT0MsaUJBQWtCLENBQ25CLEdDNUpDLGNBb0JBLGNEc0o2QixDQUM5QixLQWlEQyxzQkFDQSxVQUFXLENBQ1osTUFPQyxhQUFjLENBQ2YsUUFTQyxjQUNBLGNBQ0Esa0JBQ0EsdUJBQXdCLENBQ3pCLElBR0MsY0FBZSxDQUNoQixJQUdDLFVBQVcsQ0FDWixJQVVDLGlCQUFrQixDQUNuQixlQU9DLGVBQWdCLENBQ2pCLE9DMVBDLGlCQ2xCa0IsQ0ZnVW5CLEdBUUMsdUJBQ0EsU0FDQSxnQkFBaUIsQ0FDbEIsc0NBa0RDLGFBQ0EsUUFBUyxDQUNWLE9B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IHwgTUlUL0dQTHYyIExpY2Vuc2UgfCBiaXQubHkvbm9ybWFsaXplLXNjc3MgKi9cclxuXHJcbkBpbXBvcnQgJ3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgXCJ2ZXJ0aWNhbC1yaHl0aG1cIjtcclxuXHJcbi8vIElmIHdlJ3ZlIGN1c3RvbWl6ZWQgYW55IGZvbnQgdmFyaWFibGVzLCB3ZSdsbCBuZWVkIGV4dHJhIHByb3BlcnRpZXMuXHJcbkBpZiAkYmFzZS1mb250LXNpemUgIT0gMTZweFxyXG4gIG9yICRiYXNlLWxpbmUtaGVpZ2h0ICE9IDI0cHhcclxuICBvciAkYmFzZS11bml0ICE9ICdlbSdcclxuICBvciAkaDEtZm9udC1zaXplICE9IDIgICAgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaDItZm9udC1zaXplICE9IDEuNSAgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaDMtZm9udC1zaXplICE9IDEuMTcgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaDQtZm9udC1zaXplICE9IDEgICAgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaDUtZm9udC1zaXplICE9IDAuODMgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaDYtZm9udC1zaXplICE9IDAuNjcgKiAkYmFzZS1mb250LXNpemVcclxuICBvciAkaW5kZW50LWFtb3VudCAhPSA0MHB4IHtcclxuICAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobTogdHJ1ZSAhZ2xvYmFsO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXHJcbiAqL1xyXG5cclxuaHRtbCB7XHJcbiAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICAgIC8vIENvcnJlY3Qgb2xkIGJyb3dzZXIgYnVnIHRoYXQgcHJldmVudGVkIGFjY2Vzc2libGUgcmVzaXppbmcgb2YgdGV4dFxyXG4gICAgLy8gd2hlbiByb290IGZvbnQtc2l6ZSBpcyBzZXQgd2l0aCBweCBvciBlbS5cclxuICAgIGZvbnQtc2l6ZTogKCRiYXNlLWZvbnQtc2l6ZSAvIDE2cHgpICogMTAwJTtcclxuICB9XHJcbiAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAoJGJhc2UtbGluZS1oZWlnaHQgLyAkYmFzZS1mb250LXNpemUpICogMWVtO1xyXG4gIH1cclxuICBmb250LWZhbWlseTogJGJhc2UtZm9udC1mYW1pbHk7IC8qIDEgKi9cclxuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xyXG5cclxuYm9keSB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgPDEwLlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3ggZm9yIGBkZXRhaWxzYCBvciBgc3VtbWFyeWAuXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIGZvciBgbWFpbmAuXHJcbiAqL1xyXG5cclxuYXJ0aWNsZSxcclxuYXNpZGUsXHJcbmRldGFpbHMsXHJcbmZpZ2NhcHRpb24sXHJcbmZpZ3VyZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbm1haW4sXHJcbm1lbnUsXHJcbm5hdixcclxuc2VjdGlvbixcclxuc3VtbWFyeSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA8MTAuXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbmNhbnZhcyxcclxucHJvZ3Jlc3MsXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBhbmQgcmVtb3ZlIGV4Y2VzcyBoZWlnaHQgaW4gaU9TIDQtNy5cclxuICovXHJcblxyXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICovXHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgPDExLCBTYWZhcmkgPDgsIGFuZCBGaXJlZm94IDwyMi5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xyXG5cclxudGVtcGxhdGUsIC8qIDEgKi9cclxuW2hpZGRlbl0ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIExpbmtzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxyXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXHJcbiAqL1xyXG5cclxuYSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cclxuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcclxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqL1xyXG5cclxuYTphY3RpdmUsXHJcbmE6aG92ZXIge1xyXG4gIG91dGxpbmUtd2lkdGg6IDA7XHJcbn1cclxuXHJcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggPDQwLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmFiYnJbdGl0bGVdIHtcclxuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG4lbW9ub3NwYWNlLFxyXG5jb2RlLFxyXG5rYmQsXHJcbnNhbXAge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDw0LjQuXHJcbiAqL1xyXG5cclxuZGZuIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGgxLWZvbnQtc2l6ZSk7XHJcbiAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDEtZm9udC1zaXplKTtcclxuICB9XHJcblxyXG4gIC8qIFNldCAxIHVuaXQgb2YgdmVydGljYWwgcmh5dGhtIG9uIHRoZSB0b3AgYW5kIGJvdHRvbSBtYXJnaW5zLiAqL1xyXG4gIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDEtZm9udC1zaXplKTtcclxufVxyXG5cclxuQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICBoMiB7XHJcbiAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoMi1mb250LXNpemUpO1xyXG4gICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWxpbmUtaGVpZ2h0KCRoMi1mb250LXNpemUpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoMi1mb250LXNpemUpO1xyXG4gIH1cclxuXHJcbiAgaDMge1xyXG4gICAgQGluY2x1ZGUgbm9ybWFsaXplLWZvbnQtc2l6ZSgkaDMtZm9udC1zaXplKTtcclxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XHJcbiAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDMtZm9udC1zaXplKTtcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDMtZm9udC1zaXplKTtcclxuICB9XHJcblxyXG4gIGg0IHtcclxuICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1mb250LXNpemUoJGg0LWZvbnQtc2l6ZSk7XHJcbiAgICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xyXG4gICAgICBAaW5jbHVkZSBub3JtYWxpemUtbGluZS1oZWlnaHQoJGg0LWZvbnQtc2l6ZSk7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCwgJGg0LWZvbnQtc2l6ZSk7XHJcbiAgfVxyXG5cclxuICBoNSB7XHJcbiAgICBAaW5jbHVkZSBub3JtYWxpemUtZm9udC1zaXplKCRoNS1mb250LXNpemUpO1xyXG4gICAgQGlmICRub3JtYWxpemUtdmVydGljYWwtcmh5dGhtIHtcclxuICAgICAgQGluY2x1ZGUgbm9ybWFsaXplLWxpbmUtaGVpZ2h0KCRoNS1mb250LXNpemUpO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDAsICRoNS1mb250LXNpemUpO1xyXG4gIH1cclxuXHJcbiAgaDYge1xyXG4gICAgQGluY2x1ZGUgbm9ybWFsaXplLWZvbnQtc2l6ZSgkaDYtZm9udC1zaXplKTtcclxuICAgIEBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XHJcbiAgICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1saW5lLWhlaWdodCgkaDYtZm9udC1zaXplKTtcclxuICAgIH1cclxuICAgIEBpbmNsdWRlIG5vcm1hbGl6ZS1tYXJnaW4oMSAwLCAkaDYtZm9udC1zaXplKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgPDEwLlxyXG4gKi9cclxuXHJcbm1hcmsge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cclxuICogYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnN1Yixcclxuc3VwIHtcclxuICBmb250LXNpemU6IDc1JTtcclxuICBsaW5lLWhlaWdodDogMDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG5zdWIge1xyXG4gIGJvdHRvbTogLTAuMjVlbTtcclxufVxyXG5cclxuc3VwIHtcclxuICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgPDExLlxyXG4gKi9cclxuXHJcbmltZyB7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqL1xyXG5cclxuc3ZnOm5vdCg6cm9vdCkge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbkBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XHJcbiAgLyoqXHJcbiAgICogU2V0IDEgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHRvcCBhbmQgYm90dG9tIG1hcmdpbi5cclxuICAgKi9cclxuXHJcbiAgYmxvY2txdW90ZSB7XHJcbiAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgJGluZGVudC1hbW91bnQpO1xyXG4gIH1cclxuXHJcbiAgZGwsXHJcbiAgbWVudSxcclxuICBvbCxcclxuICB1bCB7XHJcbiAgICBAaW5jbHVkZSBub3JtYWxpemUtbWFyZ2luKDEgMCk7XHJcbiAgfVxyXG5cclxuICBAaWYgJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBUdXJuIG9mZiBtYXJnaW5zIG9uIG5lc3RlZCBsaXN0cy5cclxuICAgICAqL1xyXG5cclxuICAgIG9sLFxyXG4gICAgdWwge1xyXG4gICAgICBvbCxcclxuICAgICAgdWwge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGQge1xyXG4gICAgbWFyZ2luOiAwIDAgMCAkaW5kZW50LWFtb3VudDtcclxuICB9XHJcblxyXG4gIG1lbnUsXHJcbiAgb2wsXHJcbiAgdWwge1xyXG4gICAgcGFkZGluZzogMCAwIDAgJGluZGVudC1hbW91bnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxyXG4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxICRpbmRlbnQtYW1vdW50KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gKi9cclxuXHJcbmhyIHtcclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xyXG4gIGhlaWdodDogMDsgLyogMSAqL1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXHJcbn1cclxuXHJcbkBpZiAkbm9ybWFsaXplLXZlcnRpY2FsLXJoeXRobSB7XHJcbiAgLyoqXHJcbiAgICogU2V0IDEgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0gb24gdGhlIHRvcCBhbmQgYm90dG9tIG1hcmdpbi5cclxuICAgKi9cclxuXHJcbiAgcCxcclxuICBwcmUge1xyXG4gICAgQGluY2x1ZGUgbm9ybWFsaXplLW1hcmdpbigxIDApO1xyXG4gIH1cclxufVxyXG5cclxucHJlIHtcclxuICBAZXh0ZW5kICVtb25vc3BhY2U7XHJcbn1cclxuXHJcbi8qIEZvcm1zXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogS25vd24gaXNzdWVzOlxyXG4gKiAtIEJ5IGRlZmF1bHQsIENocm9tZSBvbiBPUyBYIGFuZCBTYWZhcmkgb24gT1MgWCBhbGxvdyB2ZXJ5IGxpbWl0ZWQgc3R5bGluZyBvZlxyXG4gKiAgIHNlbGVjdCwgdW5sZXNzIGEgYm9yZGVyIHByb3BlcnR5IGlzIHNldC4gVGhlIGRlZmF1bHQgZm9udCB3ZWlnaHQgb25cclxuICogICBvcHRncm91cCBlbGVtZW50cyBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIG9uIE9TWCBhbmQgU2FmYXJpIG9uXHJcbiAqICAgT1MgWC5cclxuICogLSBJdCBpcyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkbyBub3Qgc3R5bGUgY2hlY2tib3ggYW5kIHJhZGlvIGlucHV0cyBhc1xyXG4gKiAgIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2VzIG5vdCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxyXG4gKiAtIENlcnRhaW4gZm9udCBzaXplIHZhbHVlcyBhcHBsaWVkIHRvIG51bWJlciBpbnB1dHMgY2F1c2UgdGhlIGN1cnNvciBzdHlsZSBvZlxyXG4gKiAgIHRoZSBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGRlZmF1bHQgdG8gdGV4dC5cclxuICogLSBUaGUgc2VhcmNoIGlucHV0IGlzIG5vdCBmdWxseSBzdHlsYWJsZSBieSBkZWZhdWx0LiBJbiBDaHJvbWUgYW5kIFNhZmFyaSBvblxyXG4gKiAgIE9TWC9pT1MgeW91IGNhbid0IGNvbnRyb2wgZm9udCwgcGFkZGluZywgYm9yZGVyLCBvciBiYWNrZ3JvdW5kLiBJbiBDaHJvbWVcclxuICogICBhbmQgU2FmYXJpIG9uIFdpbmRvd3MgeW91IGNhbid0IGNvbnRyb2wgYm9yZGVyIHByb3Blcmx5LiBJdCB3aWxsIGFwcGx5XHJcbiAqICAgYm9yZGVyLXdpZHRoIGJ1dCB3aWxsIG9ubHkgc2hvdyBhIGJvcmRlciBjb2xvciAod2hpY2ggY2Fubm90IGJlIGNvbnRyb2xsZWQpXHJcbiAqICAgZm9yIHRoZSBvdXRlciAxcHggb2YgdGhhdCBib3JkZXIuIEFwcGx5aW5nIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkXHJcbiAqICAgYWRkcmVzc2VzIHRoZXNlIGlzc3VlcyB3aXRob3V0IHJlbW92aW5nIHRoZSBiZW5lZml0cyBvZiBzZWFyY2ggaW5wdXRzIChlLmcuXHJcbiAqICAgc2hvd2luZyBwYXN0IHNlYXJjaGVzKS4gU2FmYXJpIChidXQgbm90IENocm9tZSkgd2lsbCBjbGlwIHRoZSBjYW5jZWwgYnV0dG9uXHJcbiAqICAgb24gd2hlbiBpdCBoYXMgcGFkZGluZyAoYW5kIHRleHRmaWVsZCBhcHBlYXJhbmNlKS5cclxuICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgZm9udDogaW5oZXJpdDsgLyogMSAqL1xyXG4gIG1hcmdpbjogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqL1xyXG5cclxuYnV0dG9uIHtcclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3QgeyAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcclxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xyXG5bdHlwZT1cInJlc2V0XCJdLFxyXG5bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cclxufVxyXG5cclxuYnV0dG9uLFxyXG5bdHlwZT1cImJ1dHRvblwiXSxcclxuW3R5cGU9XCJyZXNldFwiXSxcclxuW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG5cclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gICAqL1xyXG5cclxuICAmOjotbW96LWZvY3VzLWlubmVyIHtcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAgICovXHJcblxyXG4gICY6LW1vei1mb2N1c3Jpbmcge1xyXG4gICAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuaW5wdXQge1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgPDExLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgPDExLlxyXG4gKi9cclxuXHJcblt0eXBlPVwiY2hlY2tib3hcIl0sXHJcblt0eXBlPVwicmFkaW9cIl0ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxyXG4gICAqL1xyXG5cclxuICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxyXG4gICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIG9wYWNpdHk6IDAuNTQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcclxuICBtYXJnaW46IDAgMnB4O1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xyXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IGEgcHJldmlvdXMgcnVsZS5cclxuICovXHJcblxyXG5vcHRncm91cCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxyXG4gKi9cclxuXHJcbnRleHRhcmVhIHtcclxuICBvdmVyZmxvdzogYXV0bztcclxufSIsIi8vXHJcbi8vIFZlcnRpY2FsIFJoeXRobVxyXG4vL1xyXG4vLyBUaGlzIGlzIHRoZSBtaW5pbWFsIGFtb3VudCBvZiBjb2RlIG5lZWRlZCB0byBjcmVhdGUgdmVydGljYWwgcmh5dGhtIGluIG91clxyXG4vLyBDU1MuIElmIHlvdSBhcmUgbG9va2luZyBmb3IgYSByb2J1c3Qgc29sdXRpb24sIGxvb2sgYXQgdGhlIGV4Y2VsbGVudCBUeXBleVxyXG4vLyBsaWJyYXJ5LiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcHRhcmFudG8vdHlwZXlcclxuXHJcbkBmdW5jdGlvbiBub3JtYWxpemUtcmh5dGhtKCR2YWx1ZSwgJHJlbGF0aXZlLXRvOiAkYmFzZS1mb250LXNpemUsICR1bml0OiAkYmFzZS11bml0KSB7XHJcbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSBweCB7XHJcbiAgICBAZXJyb3IgXCJUaGUgbm9ybWFsaXplIHZlcnRpY2FsLXJoeXRobSBtb2R1bGUgb25seSBzdXBwb3J0cyBweCBpbnB1dHMuIFRoZSB0eXBleSBsaWJyYXJ5IGlzIGJldHRlci5cIjtcclxuICB9XHJcbiAgQGlmICR1bml0ID09IHJlbSB7XHJcbiAgICBAcmV0dXJuICgkdmFsdWUgLyAkYmFzZS1mb250LXNpemUpICogMXJlbTtcclxuICB9XHJcbiAgQGVsc2UgaWYgJHVuaXQgPT0gZW0ge1xyXG4gICAgQHJldHVybiAoJHZhbHVlIC8gJHJlbGF0aXZlLXRvKSAqIDFlbTtcclxuICB9XHJcbiAgQGVsc2UgeyAvLyAkdW5pdCA9PSBweFxyXG4gICAgQHJldHVybiAkdmFsdWU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbm9ybWFsaXplLWZvbnQtc2l6ZSgkdmFsdWUsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XHJcbiAgQGlmIHVuaXQoJHZhbHVlKSAhPSAncHgnIHtcclxuICAgIEBlcnJvciBcIm5vcm1hbGl6ZS1mb250LXNpemUoKSBvbmx5IHN1cHBvcnRzIHB4IGlucHV0cy4gVGhlIHR5cGV5IGxpYnJhcnkgaXMgYmV0dGVyLlwiO1xyXG4gIH1cclxuICBmb250LXNpemU6IG5vcm1hbGl6ZS1yaHl0aG0oJHZhbHVlLCAkcmVsYXRpdmUtdG8pO1xyXG59XHJcblxyXG5AbWl4aW4gbm9ybWFsaXplLXJoeXRobSgkcHJvcGVydHksICR2YWx1ZXMsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XHJcbiAgJHZhbHVlLWxpc3Q6ICR2YWx1ZXM7XHJcbiAgJHNlcDogc3BhY2U7XHJcbiAgQGlmIHR5cGUtb2YoJHZhbHVlcykgPT0gJ2xpc3QnIHtcclxuICAgICRzZXA6IGxpc3Qtc2VwYXJhdG9yKCR2YWx1ZXMpO1xyXG4gIH1cclxuICBAZWxzZSB7XHJcbiAgICAkdmFsdWUtbGlzdDogYXBwZW5kKCgpLCAkdmFsdWVzKTtcclxuICB9XHJcblxyXG4gICRub3JtYWxpemVkLXZhbHVlczogKCk7XHJcbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZS1saXN0IHtcclxuICAgIEBpZiB1bml0bGVzcygkdmFsdWUpIGFuZCAkdmFsdWUgIT0gMCB7XHJcbiAgICAgICR2YWx1ZTogJHZhbHVlICogbm9ybWFsaXplLXJoeXRobSgkYmFzZS1saW5lLWhlaWdodCwgJHJlbGF0aXZlLXRvKTtcclxuICAgIH1cclxuICAgICRub3JtYWxpemVkLXZhbHVlczogYXBwZW5kKCRub3JtYWxpemVkLXZhbHVlcywgJHZhbHVlLCAkc2VwKTtcclxuICB9XHJcbiAgI3skcHJvcGVydHl9OiAkbm9ybWFsaXplZC12YWx1ZXM7XHJcbn1cclxuXHJcbkBtaXhpbiBub3JtYWxpemUtbWFyZ2luKCR2YWx1ZXMsICRyZWxhdGl2ZS10bzogJGJhc2UtZm9udC1zaXplKSB7XHJcbiAgQGluY2x1ZGUgbm9ybWFsaXplLXJoeXRobShtYXJnaW4sICR2YWx1ZXMsICRyZWxhdGl2ZS10byk7XHJcbn1cclxuXHJcbkBtaXhpbiBub3JtYWxpemUtbGluZS1oZWlnaHQoJGZvbnQtc2l6ZSwgJG1pbi1saW5lLXBhZGRpbmc6IDJweCkge1xyXG4gICRsaW5lczogY2VpbCgkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpO1xyXG4gIC8vIElmIGxpbmVzIGFyZSBjcmFtcGVkIGluY2x1ZGUgc29tZSBleHRyYSBsZWFkaW5nLlxyXG4gIEBpZiAoJGxpbmVzICogJGJhc2UtbGluZS1oZWlnaHQgLSAkZm9udC1zaXplKSA8ICgkbWluLWxpbmUtcGFkZGluZyAqIDIpIHtcclxuICAgICRsaW5lczogJGxpbmVzICsgMTtcclxuICB9XHJcbiAgQGluY2x1ZGUgbm9ybWFsaXplLXJoeXRobShsaW5lLWhlaWdodCwgJGxpbmVzLCAkZm9udC1zaXplKTtcclxufSIsIi8vXHJcbi8vIFZhcmlhYmxlc1xyXG4vL1xyXG4vLyBJZiB5b3UgaGF2ZSBhbiBpbml0aWFsaXphdGlvbiBwYXJ0aWFsIChvciBlcXVpdmFsZW50KSwgeW91IHNob3VsZCBtb3ZlIHRoZXNlXHJcbi8vIGxpbmVzIHRvIHRoYXQgZmlsZS4gTk9URTogRWRpdCB0aGUgbGluZXMgdG8gcmVtb3ZlIFwiIWRlZmF1bHRcIi5cclxuXHJcbi8vIFRoZSBmb250IHNpemUgc2V0IG9uIHRoZSByb290IGh0bWwgZWxlbWVudC5cclxuJGJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xyXG5cclxuLy8gVGhlIGJhc2UgbGluZSBoZWlnaHQgZGV0ZXJtaW5lcyB0aGUgYmFzaWMgdW5pdCBvZiB2ZXJ0aWNhbCByaHl0aG0uXHJcbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNHB4ICFkZWZhdWx0O1xyXG5cclxuLy8gVGhlIGxlbmd0aCB1bml0IGluIHdoaWNoIHRvIG91dHB1dCB2ZXJ0aWNhbCByaHl0aG0gdmFsdWVzLlxyXG4vLyBTdXBwb3J0ZWQgdmFsdWVzOiBweCwgZW0sIHJlbS5cclxuJGJhc2UtdW5pdDogJ2VtJyAhZGVmYXVsdDtcclxuXHJcbi8vIFRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5LlxyXG4kYmFzZS1mb250LWZhbWlseTogc2Fucy1zZXJpZiAhZGVmYXVsdDtcclxuXHJcbi8vIFRoZSBmb250IHNpemVzIGZvciBoMS1oNi5cclxuJGgxLWZvbnQtc2l6ZTogMiAgICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGgyLWZvbnQtc2l6ZTogMS41ICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGgzLWZvbnQtc2l6ZTogMS4xNyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGg0LWZvbnQtc2l6ZTogMSAgICAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGg1LWZvbnQtc2l6ZTogMC44MyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuJGg2LWZvbnQtc2l6ZTogMC42NyAqICRiYXNlLWZvbnQtc2l6ZSAhZGVmYXVsdDtcclxuXHJcbi8vIFRoZSBhbW91bnQgbGlzdHMgYW5kIGJsb2NrcXVvdGVzIGFyZSBpbmRlbnRlZC5cclxuJGluZGVudC1hbW91bnQ6IDQwcHggIWRlZmF1bHQ7XHJcblxyXG4vLyBUaGUgZm9sbG93aW5nIHZhcmlhYmxlIGNvbnRyb2xzIHdoZXRoZXIgbm9ybWFsaXplLXNjc3Mgd2lsbCBvdXRwdXRcclxuLy8gZm9udC1zaXplcywgbGluZS1oZWlnaHRzIGFuZCBibG9jay1sZXZlbCB0b3AvYm90dG9tIG1hcmdpbnMgdGhhdCBmb3JtIGEgYmFzaWNcclxuLy8gdmVydGljYWwgcmh5dGhtIG9uIHRoZSBwYWdlLCB3aGljaCBkaWZmZXJzIGZyb20gdGhlIG9yaWdpbmFsIE5vcm1hbGl6ZS5jc3MuXHJcbi8vIEhvd2V2ZXIsIGNoYW5naW5nIGFueSBvZiB0aGUgdmFyaWFibGVzIGFib3ZlIHdpbGwgY2F1c2VcclxuLy8gJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG0gdG8gYmUgYXV0b21hdGljYWxseSBzZXQgdG8gdHJ1ZS5cclxuJG5vcm1hbGl6ZS12ZXJ0aWNhbC1yaHl0aG06IGZhbHNlICFkZWZhdWx0OyIsIkBrZXlmcmFtZXMgc3dpbmcge1xyXG4gIGZyb20gIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApIHJvdGF0ZSgwZGVnKTtcclxuICB9XHJcbiAgMzMlIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC02MHB4LCAtMjBweCkgcm90YXRlKC0yMGRlZyk7XHJcbiAgfVxyXG4gIDY2JSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg2MHB4LCAtMjBweCkgcm90YXRlKDIwZGVnKTtcclxuICB9XHJcbiAgdG8gIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDApIHJvdGF0ZSgwZGVnKTtcclxuICB9XHJcbn0iLCJodG1sICB7XHJcbiAgb3ZlcmZsb3cteDogaGlkZGVuO1xyXG59XHJcbiogICB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5ib2R5ICB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJnLWNvbG9yO1xyXG4gIGZvbnQtZmFtaWx5OiAkdGV4dC1mb250O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB0cmFuc2l0aW9uOiBhbGwgMS41cyBlYXNlO1xyXG4gICYubGlnaHQgIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM3QTdENUE7XHJcbiAgfVxyXG4gICYuZGFyayB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyMTIxO1xyXG4gIH1cclxufVxyXG5hICAge1xyXG4gIGNvbG9yOiBpbmhlcml0O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5oMiAge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDJyZW07XHJcbiAgcGFkZGluZzogMnJlbTtcclxuICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICBmb250LXNpemU6IDNyZW07XHJcbiAgfVxyXG4gIEBpbmNsdWRlIGxhcHRvcHMgIHtcclxuICAgIGZvbnQtc2l6ZTogNHJlbTtcclxuICB9XHJcbn1cclxudWwgIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgbGkgIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgfVxyXG4gICAgQGluY2x1ZGUgbGFwdG9wcyAge1xyXG4gICAgICBmb250LXNpemU6IDEuNXJlbTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuLnRhYnMge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIEBpbmNsdWRlIG1xLW5vdC1tb2JpbGUgIHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgfVxyXG4gIEBpbmNsdWRlIGxhcHRvcHMgIHtcclxuICAgIHdpZHRoOiA2MCU7XHJcbiAgfVxyXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gIHBhZGRpbmc6IDAgMXJlbTtcclxufVxyXG5cclxuLnNsaWRlcyB7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDFzIGVhc2U7XHJcbiAgJi5tb3ZlTGVmdCAge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDB2dyk7XHJcbiAgfVxyXG4gICYubW92ZVJpZ2h0IHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDB2dyk7XHJcbiAgfVxyXG59XHJcbnAgICB7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIHdvcmQtc3BhY2luZzogLjFyZW07XHJcbiAgbWFyZ2luOiAwLjYyNXJlbSAwO1xyXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgQGluY2x1ZGUgbXEtbm90LW1vYmlsZSAge1xyXG4gICAgbGluZS1oZWlnaHQ6IDJyZW07XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICB9XHJcbiAgQGluY2x1ZGUgbGFwdG9wcyAge1xyXG4gICAgZm9udC1zaXplOiAxLjVyZW07XHJcbiAgfVxyXG59XHJcbi5uZXh0LFxyXG4ucHJldmlvdXMge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBmb250LXNpemU6IDJyZW07XHJcbiAgcGFkZGluZy1ib3R0b206IDNweDtcclxuICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4gICY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIHRyYW5zaXRpb246IHdpZHRoIC41cyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIC41cyBlYXNlO1xyXG4gIH1cclxuICAmOmhvdmVyOmFmdGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgfVxyXG59XHJcbi5uZXh0IHtcclxuICByaWdodDogLTMwJTtcclxufVxyXG4ucHJldmlvdXMge1xyXG4gIGxlZnQ6IC0zMCU7XHJcbn1cclxuIiwiQG1peGluIGxhbmRzY2FwZVBob25lIHtcclxuICBAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbkBtaXhpbiBtcS1ub3QtbW9iaWxlICB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbkBtaXhpbiBsYXB0b3BzICB7XHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoIDogMTIwMHB4KSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn0iLCIubWFpblNlY3Rpb24gIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcGFkZGluZy10b3A6IDIwdmg7XHJcbiAgcGFkZGluZy1ib3R0b206IDV2aDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgaDEgIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xyXG4gICAgQGluY2x1ZGUgbXEtbm90LW1vYmlsZSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogNnJlbTtcclxuICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICB9XHJcbiAgfVxyXG4gIGgyICB7XHJcbiAgICBmb250LWZhbWlseTogJGN1cnNpdmUtZm9udDI7XHJcbiAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgQGluY2x1ZGUgbGFwdG9wcyAge1xyXG4gICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICB9XHJcbiAgfVxyXG4gIHVsICB7XHJcbiAgICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICB9XHJcbiAgICBsaSAge1xyXG4gICAgICBwYWRkaW5nOiAuMTVyZW07XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgJjpudGgtb2YtdHlwZSgzKSAge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICB9XHJcbiAgICAgIEBpbmNsdWRlIG1xLW5vdC1tb2JpbGUgIHtcclxuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICBwYWRkaW5nOiAwIC4yNXJlbTtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIHdpZHRoOiAzMyU7XHJcbiAgICAgIH1cclxuICAgICAgYSAgIHtcclxuICAgICAgICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogM3B4O1xyXG4gICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAuNXMgZWFzZSwgYmFja2dyb3VuZC1jb2xvciAuNXMgZWFzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6aG92ZXI6YWZ0ZXIge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLnBvcnRmb2xpbyAge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIH1cclxuICB1bCAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxuICAgIHdpZHRoOiA5MCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIEBpbmNsdWRlIG1xLW5vdC1tb2JpbGUgIHtcclxuICAgICAgd2lkdGg6IGF1dG87XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICB9XHJcbiAgICBsaSAge1xyXG4gICAgICBtYXJnaW46IC41cmVtIDA7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgQGluY2x1ZGUgbXEtbm90LW1vYmlsZSAge1xyXG4gICAgICAgIHdpZHRoOiA0NSU7XHJcbiAgICAgICAgbWFyZ2luOiAuNXJlbTtcclxuICAgICAgfVxyXG4gICAgICBAaW5jbHVkZSBsYXB0b3BzICB7XHJcbiAgICAgICAgd2lkdGg6IDQwJTtcclxuICAgICAgfVxyXG4gICAgICAmOm50aC1jaGlsZCgxKSAge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgQGluY2x1ZGUgbXEtbm90LW1vYmlsZSAge1xyXG4gICAgICAgICAgbWFyZ2luOiAuNXJlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYSAge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNmM4NDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJjpudGgtY2hpbGQoMikgYSAge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwYzg3N2E7XHJcbiAgICAgIH1cclxuICAgICAgJjpudGgtY2hpbGQoMykgYSAge1xyXG5cclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjcwMDRFO1xyXG4gICAgICB9XHJcbiAgICAgICY6bnRoLWNoaWxkKDQpICB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMDtcclxuICAgICAgICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICAgICAgICBtYXJnaW46IC41cmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBhICB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjgyOTNFO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBhICAge1xyXG4gICAgICAgIHBhZGRpbmc6IC41cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIEBpbmNsdWRlIGxhcHRvcHMgIHtcclxuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZTtcclxuICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICY6YWZ0ZXIgIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRiZy1jb2xvciwgMCk7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuNXMgZWFzZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6aG92ZXIgICB7XHJcbiAgICAgICAgICAgIGZpZ2NhcHRpb24gIHtcclxuICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmaWd1cmUgIHtcclxuICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgQGluY2x1ZGUgbGFwdG9wcyAge1xyXG4gICAgICAgICAgICBtYXgtd2lkdGg6IDI1cmVtO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaW1nICAge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBmaWdjYXB0aW9uICB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNXJlbTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmctY29sb3I7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGxhcHRvcHMgIHtcclxuICAgICAgICAgICAgICBtaW4taGVpZ2h0OiA2cmVtO1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xyXG4gICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgICAgYm90dG9tOiAtNnJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufSIsIiRjdXJzaXZlLWZvbnQ6ICdKaW0gTmlnaHRzaGFkZScsIGN1cnNpdmU7XHJcbiRjdXJzaXZlLWZvbnQyOiAnQ2F2ZWF0JywgY3Vyc2l2ZTtcclxuJHRleHQtZm9udDogJ09zd2FsZCcsIHNhbnMtc2VyaWY7XHJcbiRjb2xvci0xOiAjNDQ4NDkwO1xyXG4kY29sb3ItMjogIzg4MDYwNjtcclxuJGNvbG9yLTM6ICNBNjcyMzY7XHJcbiRiZy1jb2xvcjogJGNvbG9yLTI7XHJcbiIsIi5hYm91dCAge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgLnNraWxsc0xpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBoMyAge1xyXG4gICAgICBtYXJnaW46IDFyZW0gMDtcclxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICBAaW5jbHVkZSBtcS1ub3QtbW9iaWxlICB7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB1bCAge1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgbGkgIHtcclxuICAgICAgICBwYWRkaW5nOiAuMjVyZW07XHJcbiAgICAgICAgQGluY2x1ZGUgbGFwdG9wcyAge1xyXG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59IiwiLmluZm9Gb3JNb2JpbGUgIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICB0b3A6IDA7XHJcbiAgd2lkdGg6IDEwMHZ3O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBvcGFjaXR5OiAwO1xyXG4gIGRpdiAgIHtcclxuICAgIHBhZGRpbmc6IDkuMzc1cmVtO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCAjMTExIDAlLCB0cmFuc3BhcmVudCA3MCUpO1xyXG4gICAgaW1nIHtcclxuICAgICAgaGVpZ2h0OiA4MHB4O1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgJi5zdGFydEFuaW1hdGlvbiAge1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XHJcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgYW5pbWF0aW9uLW5hbWU6IHN3aW5nO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59Il19 */
